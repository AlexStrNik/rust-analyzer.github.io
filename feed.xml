<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rust-analyzer</title>
    <description>rust-analyzer: building a better Rust IDE</description>
    <link>https://rust-analyzer.github.io//</link>
    <atom:link href="https://rust-analyzer.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 12 Feb 2020 13:21:43 +0000</pubDate>
    <lastBuildDate>Wed, 12 Feb 2020 13:21:43 +0000</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>2019 Financial Report</title>
        <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//blog/2020/02/11/2019-financial-report.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//blog/2020/02/11/2019-financial-report.html</guid>
        <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a short financial report for Open Collective money for 2019.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve got 9933 EUR on open collective after fees.
We&amp;#8217;ve rounded that number up to 10000 (using some funds from this year) and split it into two buckets:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;80% for Ferrous Systems&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;20% for contributors, not affiliated with Ferrous&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ferrous share went to paying for part of &lt;a href=&quot;https://github.com/matklad&quot;&gt;@matklad&lt;/a&gt;'s time (thats me!), and for administrative tasks.
The remaining 2000 EUR were payed to &lt;a href=&quot;https://github.com/flodiebold&quot;&gt;@flodiebold&lt;/a&gt; for implementing and maintaining type inference infrastructure of rust-analyzer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our biggest Open Collective sponsors in 2019 were:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.embark-studios.com&quot;&gt;Embark Studios&lt;/a&gt; (6000EUR)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://discordapp.com&quot;&gt;Discord&lt;/a&gt; (1000EUR)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;lt;3&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you use rust-analyzer professionally, consider asking your company to sponsor the development of this project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As a reminder, we publish &lt;a href=&quot;https://rust-analyzer.github.io/thisweek&quot;&gt;weekly changelog&lt;/a&gt; to report the progress on rust-analyzer.&lt;/p&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #11</title>
        <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2020/02/10/changelog-11.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2020/02/10/changelog-11.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/5b703bdc582be427ee62d250b3d3290165c36b8c&quot;&gt;&lt;code&gt;5b703bd&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2020-02-10&quot;&gt;&lt;code&gt;2020-02-10&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3053&quot;&gt;&lt;code&gt;#3053&lt;/code&gt;&lt;/a&gt; VS Code extension now tries to automatically download the latest release.
Additionally, the extension is now published to the Marketplace (&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer&quot;&gt;link&lt;/a&gt;).
Note that if you want to continue using rust-analyzer build from sources, you need to add&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;{
      &quot;rust-analyzer.raLspServerPath&quot;: &quot;ra_lsp_server&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;to &lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2981&quot;&gt;&lt;code&gt;#2981&lt;/code&gt;&lt;/a&gt; changed the way &lt;code&gt;onEnter&lt;/code&gt; handler works in VS Code.
We no longer register a custom &lt;code&gt;ontype&lt;/code&gt; command.
Instead, we provide a shortcut, bound to kbd:[Enter].
If you have &lt;code&gt;enableEnhancedTyping: false&lt;/code&gt; in you settings, you&amp;#8217;ll want to disable this shortcut.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3050&quot;&gt;&lt;code&gt;#3050&lt;/code&gt;&lt;/a&gt; implement argument-position &lt;code&gt;impl Trait&lt;/code&gt; again (support for &lt;code&gt;impl Trait&lt;/code&gt; was removed with the Chalk upgrade last week). Return-position &lt;code&gt;impl Trait&lt;/code&gt; support will still have to wait for Chalk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2911&quot;&gt;&lt;code&gt;#2911&lt;/code&gt;&lt;/a&gt; display errors from the lexer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2962&quot;&gt;&lt;code&gt;#2962&lt;/code&gt;&lt;/a&gt; groundwork for &lt;code&gt;use Trait as _&lt;/code&gt; syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2948&quot;&gt;&lt;code&gt;#2948&lt;/code&gt;&lt;/a&gt; &lt;strong&gt;Add Explicit Type&lt;/strong&gt; assist now can replace &lt;code&gt;_&lt;/code&gt; types.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3040&quot;&gt;&lt;code&gt;#3040&lt;/code&gt;&lt;/a&gt; rework value parameter parsing to use 2018 edition syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3054&quot;&gt;&lt;code&gt;#3054&lt;/code&gt;&lt;/a&gt; move Emacs support upstream.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3017&quot;&gt;&lt;code&gt;#3017&lt;/code&gt;&lt;/a&gt; correctly handle crates with &lt;code&gt;-&lt;/code&gt; in names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3044&quot;&gt;&lt;code&gt;#3044&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t crash when receiving unknown file for cargo diagnostics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3047&quot;&gt;&lt;code&gt;#3047&lt;/code&gt;&lt;/a&gt; fix parsing of &lt;code&gt;async unsafe&lt;/code&gt; functions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3024&quot;&gt;&lt;code&gt;#3024&lt;/code&gt;&lt;/a&gt; fix leaking observers and promises in VS Code extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3001&quot;&gt;&lt;code&gt;#3001&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3003&quot;&gt;&lt;code&gt;#3003&lt;/code&gt;&lt;/a&gt; reduce the number of TypeScript dependencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3018&quot;&gt;&lt;code&gt;#3018&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3045&quot;&gt;&lt;code&gt;#3045&lt;/code&gt;&lt;/a&gt; refactor some assists to use type-safe AST editing API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3031&quot;&gt;&lt;code&gt;#3031&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3034&quot;&gt;&lt;code&gt;#3034&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3063&quot;&gt;&lt;code&gt;#3063&lt;/code&gt;&lt;/a&gt; refactor auto-import infrastructure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3069&quot;&gt;&lt;code&gt;#3069&lt;/code&gt;&lt;/a&gt; refactor interface for creating assists groups.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3081&quot;&gt;&lt;code&gt;#3081&lt;/code&gt;&lt;/a&gt; automate release process.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/3029&quot;&gt;&lt;code&gt;#3029&lt;/code&gt;&lt;/a&gt; extract &lt;code&gt;ra_ide_db&lt;/code&gt; crate to improve compile times and code organization.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer.github.io/pull/31&quot;&gt;&lt;code&gt;rust-analyzer.github.io#31&lt;/code&gt;&lt;/a&gt; switch changelogs from markdown to AsciiDoctor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bump NodeJS requirement to 12 (you only need node if you build VS Code extension from source).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #10</title>
        <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2020/02/03/changelog-10.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2020/02/03/changelog-10.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/c57ed0cfb29bc2b311299eebb4f7820a31068a37&quot;&gt;&lt;code&gt;c57ed0c&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2020-02-03&quot;&gt;&lt;code&gt;2020-02-03&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2963&quot;&gt;&lt;code&gt;#2963&lt;/code&gt;&lt;/a&gt; add auto-import support to Emacs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2978&quot;&gt;&lt;code&gt;#2978&lt;/code&gt;&lt;/a&gt; support auto-import for functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2982&quot;&gt;&lt;code&gt;#2982&lt;/code&gt;&lt;/a&gt; merge imports when auto-importing.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2933&quot;&gt;&lt;code&gt;#2933&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t compute diagnostics on the main thread.
That fixes a long-standing issue with peformance degradation due to &lt;code&gt;cargo check&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2810&quot;&gt;&lt;code&gt;#2810&lt;/code&gt;&lt;/a&gt; make magical search of struct literals work in more contexts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2916&quot;&gt;&lt;code&gt;#2916&lt;/code&gt;&lt;/a&gt; fix slow &lt;code&gt;cargo check&lt;/code&gt; performance due to unbuffered reads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2924&quot;&gt;&lt;code&gt;#2924&lt;/code&gt;&lt;/a&gt; avoid spawning more than one Cargo for &lt;code&gt;cargo check&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2917&quot;&gt;&lt;code&gt;#2917&lt;/code&gt;&lt;/a&gt; prefer imports starting with &lt;code&gt;std&lt;/code&gt; for auto import.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2937&quot;&gt;&lt;code&gt;#2937&lt;/code&gt;&lt;/a&gt; fix an issue where &lt;code&gt;cargo check&lt;/code&gt; got stuck in an infinite loop if some procedural macro printed to stdout.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2970&quot;&gt;&lt;code&gt;#2970&lt;/code&gt;&lt;/a&gt; fix some clint-side bugs with syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2972&quot;&gt;&lt;code&gt;#2972&lt;/code&gt;&lt;/a&gt;, a fun one, prevent a child process for flipping rust-analyzer&amp;#8217;s stdin into non-blocking mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2959&quot;&gt;&lt;code&gt;#2959&lt;/code&gt;&lt;/a&gt; fix a bug where diagnostics from &lt;code&gt;cargo check&lt;/code&gt; were obsolete.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2872&quot;&gt;&lt;code&gt;#2872&lt;/code&gt;&lt;/a&gt; update Chalk. This should fix some cases of extremely slow trait checking.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2934&quot;&gt;&lt;code&gt;#2934&lt;/code&gt;&lt;/a&gt; log error if the main loop turns takes too long.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2931&quot;&gt;&lt;code&gt;#2931&lt;/code&gt;&lt;/a&gt; document &lt;code&gt;test_utils&lt;/code&gt; module.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2940&quot;&gt;&lt;code&gt;#2940&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2941&quot;&gt;&lt;code&gt;#2941&lt;/code&gt;&lt;/a&gt; update developer documentation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2943&quot;&gt;&lt;code&gt;#2943&lt;/code&gt;&lt;/a&gt; improve memory usage tracking infrastructure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2895&quot;&gt;&lt;code&gt;#2895&lt;/code&gt;&lt;/a&gt; make internal profiling infrastructure more maintainable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2967&quot;&gt;&lt;code&gt;#2967&lt;/code&gt;&lt;/a&gt; speed up the build of rust-analyzer by using profile overrides.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2987&quot;&gt;&lt;code&gt;#2987&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2986&quot;&gt;&lt;code&gt;#2986&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2989&quot;&gt;&lt;code&gt;#2989&lt;/code&gt;&lt;/a&gt; cleanup VS Code extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2991&quot;&gt;&lt;code&gt;#2991&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2998&quot;&gt;&lt;code&gt;#2998&lt;/code&gt;&lt;/a&gt; unsuccessfully try to improve TypeScript build process.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #9</title>
        <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2020/01/27/changelog-9.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2020/01/27/changelog-9.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/87e1baf2421d80bf6d6acd776e29827196931a32&quot;&gt;&lt;code&gt;87e1baf&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2020-01-27&quot;&gt;&lt;code&gt;2020-01-27&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2887&quot;&gt;&lt;code&gt;#2887&lt;/code&gt;&lt;/a&gt; auto import assist.
&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1711539/73185119-cf89e800-411d-11ea-9213-d6eac89256c4.gif&quot; alt=&quot;73185119 cf89e800 411d 11ea 9213 d6eac89256c4&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2883&quot;&gt;&lt;code&gt;#2883&lt;/code&gt;&lt;/a&gt; enable semantic highlighting inside macros.
&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1711539/73185287-137ced00-411e-11ea-93ed-e415daa9c5dd.gif&quot; alt=&quot;73185287 137ced00 411e 11ea 93ed e415daa9c5dd&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2899&quot;&gt;&lt;code&gt;#2899&lt;/code&gt;&lt;/a&gt; detect popular macro-based test frameworks for the purposes of the &quot;Run &amp;#8230;&amp;#8203;&quot; lenses/keybinding.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2901&quot;&gt;&lt;code&gt;#2901&lt;/code&gt;&lt;/a&gt; cancel pending requests when shutdown is initiated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2907&quot;&gt;&lt;code&gt;#2907&lt;/code&gt;&lt;/a&gt; inline variable does not remove unused variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2906&quot;&gt;&lt;code&gt;#2906&lt;/code&gt;&lt;/a&gt; fix a bug on windows where main loop was starved by background tasks.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2893&quot;&gt;&lt;code&gt;#2893&lt;/code&gt;&lt;/a&gt; add a guided tour of lossless syntax trees to the dev docs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2891&quot;&gt;&lt;code&gt;#2891&lt;/code&gt;&lt;/a&gt; remove code duplication in validation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2898&quot;&gt;&lt;code&gt;#2898&lt;/code&gt;&lt;/a&gt; cleanup &lt;code&gt;cargo watch&lt;/code&gt; state management.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #8</title>
        <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2020/01/20/changelog-8.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2020/01/20/changelog-8.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/de2409702ba639f06cf340f5e3f3b7e671021d1b&quot;&gt;&lt;code&gt;de24097&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2020-01-20&quot;&gt;&lt;code&gt;2020-01-20&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2824&quot;&gt;&lt;code&gt;#2824&lt;/code&gt;&lt;/a&gt; defer starting &lt;code&gt;cargo check&lt;/code&gt; until workspace is loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2843&quot;&gt;&lt;code&gt;#2843&lt;/code&gt;&lt;/a&gt; display inlay hints for function parameter names.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer.github.io/pull/24&quot;&gt;&lt;code&gt;rust-analyzer.github.io#24&lt;/code&gt;&lt;/a&gt; rust-analyzer has a new logo and a refreshed website.
Thanks &lt;a href=&quot;https://github.com/Aloso&quot;&gt;@Aloso&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2837&quot;&gt;&lt;code&gt;#2837&lt;/code&gt;&lt;/a&gt; syntax highlighting was &lt;a href=&quot;https://accidentallyquadratic.tumblr.com/&quot;&gt;accidentally quadratic&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2852&quot;&gt;&lt;code&gt;#2852&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t parse child modules when computing diagnostics for a module.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2853&quot;&gt;&lt;code&gt;#2853&lt;/code&gt;&lt;/a&gt; reduce the amount of blocking &lt;code&gt;cargo check&lt;/code&gt; does.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2827&quot;&gt;&lt;code&gt;#2827&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2813&quot;&gt;&lt;code&gt;#2813&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2867&quot;&gt;&lt;code&gt;#2867&lt;/code&gt;&lt;/a&gt; fix outer attributes on expressions in some cases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2877&quot;&gt;&lt;code&gt;#2877&lt;/code&gt;&lt;/a&gt; more precise active range for &quot;add explicit type&quot; assist.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2818&quot;&gt;&lt;code&gt;#2818&lt;/code&gt;&lt;/a&gt; recover from panics inside of chalk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2834&quot;&gt;&lt;code&gt;#2834&lt;/code&gt;&lt;/a&gt; remove code duplication from syntax validation routines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2841&quot;&gt;&lt;code&gt;#2841&lt;/code&gt;&lt;/a&gt; use consistent style for assist labels.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2856&quot;&gt;&lt;code&gt;#2856&lt;/code&gt;&lt;/a&gt; more orthogonal design for &lt;code&gt;ast::Path&lt;/code&gt; editing API.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2716&quot;&gt;&lt;code&gt;#2716&lt;/code&gt;&lt;/a&gt; groundwork for assists with multiple actions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2862&quot;&gt;&lt;code&gt;#2862&lt;/code&gt;&lt;/a&gt; new infrastructure for mapping source code to internal hir representation, which should prevent problems like quadratic syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #7</title>
        <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2020/01/13/changelog-7.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2020/01/13/changelog-7.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/a30129be5ae8fd3dc698cc035339ed651b30de02&quot;&gt;&lt;code&gt;a30129b&lt;/code&gt;&lt;/a&gt;&lt;br&gt;
Release: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/releases/2020-01-13&quot;&gt;&lt;code&gt;2020-01-13&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We now publish binary releases to GitHub 🎁!
Note that this is the first release, so things are expected to go wrong.
Release process is orchestrated by &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/blob/ab6e992c8719ed58c66309c5274f8a13807e6afa/.github/workflows/release.yaml&quot;&gt;this workflow&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Additionally, the VS Code extension is renamed to &lt;code&gt;rust-analyzer&lt;/code&gt; (the old name was &lt;code&gt;ra-lsp&lt;/code&gt;).
&lt;code&gt;cargo xtask install&lt;/code&gt; should automatically remove the old extension, but, if you use the binary release, you&amp;#8217;d have to uninstall manually.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also got a new sponsor: &lt;a href=&quot;https://freiheit.com&quot;&gt;freiheit.com&lt;/a&gt;!
If you use rust-analyzer at work, consider asking your company to support its development!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2724&quot;&gt;&lt;code&gt;#2724&lt;/code&gt;&lt;/a&gt; basic support for const-generic parsing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2738&quot;&gt;&lt;code&gt;#2738&lt;/code&gt;&lt;/a&gt; invoking reference search on &lt;code&gt;{&lt;/code&gt; searches for struct literals.
&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1711539/72264442-10acd300-361b-11ea-8d2d-0d48eff2f1c1.gif&quot; alt=&quot;72264442 10acd300 361b 11ea 8d2d 0d48eff2f1c1&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2698&quot;&gt;&lt;code&gt;#2698&lt;/code&gt;&lt;/a&gt; initial support for call hierarchy.
&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/6868531/71634596-6d57c900-2beb-11ea-9957-d1bb1aa92d3b.png&quot; alt=&quot;71634596 6d57c900 2beb 11ea 9957 d1bb1aa92d3b&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2732&quot;&gt;&lt;code&gt;#2732&lt;/code&gt;&lt;/a&gt; add configuration option to silence the error message about missing Cargo.toml.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2779&quot;&gt;&lt;code&gt;#2779&lt;/code&gt;&lt;/a&gt; support for parsing trait aliases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2749&quot;&gt;&lt;code&gt;#2749&lt;/code&gt;&lt;/a&gt; initial support for read/write classification of accesses in reference search.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2727&quot;&gt;&lt;code&gt;#2727&lt;/code&gt;&lt;/a&gt; &lt;code&gt;add impl members&lt;/code&gt; assist now correctly qualifies paths.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2712&quot;&gt;&lt;code&gt;#2712&lt;/code&gt;&lt;/a&gt; extend selection works in macro calls.
&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/1711539/72265573-025fb680-361d-11ea-82d1-ccf5fe524767.gif&quot; alt=&quot;72265573 025fb680 361d 11ea 82d1 ccf5fe524767&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2753&quot;&gt;&lt;code&gt;#2753&lt;/code&gt;&lt;/a&gt; epic one-line change by @michalt which enables salsa fast-path for incremental validation of libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2785&quot;&gt;&lt;code&gt;#2785&lt;/code&gt;&lt;/a&gt; fix macro expansion in expression positions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2786&quot;&gt;&lt;code&gt;#2786&lt;/code&gt;&lt;/a&gt; fix hover for local variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2807&quot;&gt;&lt;code&gt;#2807&lt;/code&gt;&lt;/a&gt; fix goto implementation for derived implementations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2788&quot;&gt;&lt;code&gt;#2788&lt;/code&gt;&lt;/a&gt; outline correctly displays `#[macro_export]`ed macro rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2816&quot;&gt;&lt;code&gt;#2816&lt;/code&gt;&lt;/a&gt; add &lt;code&gt;macro_rules&lt;/code&gt; snippet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2771&quot;&gt;&lt;code&gt;#2771&lt;/code&gt;&lt;/a&gt; make issues like &lt;code&gt;#2753&lt;/code&gt; less likely.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2768&quot;&gt;&lt;code&gt;#2768&lt;/code&gt;&lt;/a&gt; rename VS Code extension to &lt;code&gt;rust-analyzer&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2820&quot;&gt;&lt;code&gt;#2820&lt;/code&gt;&lt;/a&gt; publish binary releases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-lang/compiler-team/issues/237&quot;&gt;&lt;code&gt;compiler-team/#237&lt;/code&gt;&lt;/a&gt; initial research for parser library-ification.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #6</title>
        <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2020/01/06/changelog-6.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2020/01/06/changelog-6.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/07340a62cc1b34efcebfc9f4cfc42f655edd2fc8&quot;&gt;&lt;code&gt;07340a6&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2672&quot;&gt;&lt;code&gt;#2672&lt;/code&gt;&lt;/a&gt; fix macro expansion of repetitions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2722&quot;&gt;&lt;code&gt;#2722&lt;/code&gt;&lt;/a&gt; fix cargo watch tests on windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2734&quot;&gt;&lt;code&gt;#2734&lt;/code&gt;&lt;/a&gt; fix panic in type inference.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Restructure Vs Code extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2703&quot;&gt;&lt;code&gt;#2703&lt;/code&gt;&lt;/a&gt; remove support for old-style syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2731&quot;&gt;&lt;code&gt;#2731&lt;/code&gt;&lt;/a&gt; improve internal profiling infrastructure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2743&quot;&gt;&lt;code&gt;#2743&lt;/code&gt;&lt;/a&gt; use a declarative macro instead of an external &lt;code&gt;.ron&lt;/code&gt; file to describe input to AST code generation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #5</title>
        <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2019/12/30/changelog-5.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2019/12/30/changelog-5.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/9cad88dd95773f9ede6233fd7d0f3a076c5cda61&quot;&gt;&lt;code&gt;9cad88d&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2668&quot;&gt;&lt;code&gt;#2668&lt;/code&gt;&lt;/a&gt; move &lt;code&gt;cargo watch&lt;/code&gt; integration to the server side. Now it is available for every editor, and not only for VS Code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2661&quot;&gt;&lt;code&gt;#2661&lt;/code&gt;&lt;/a&gt; type inference for &lt;code&gt;async&lt;/code&gt; functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2663&quot;&gt;&lt;code&gt;#2663&lt;/code&gt;&lt;/a&gt; &quot;add missing impl members&quot; assists now substitutes type parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2657&quot;&gt;&lt;code&gt;#2657&lt;/code&gt;&lt;/a&gt; type hints for closures are less verbose.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2667&quot;&gt;&lt;code&gt;#2667&lt;/code&gt;&lt;/a&gt; account for visibility modifiers during name resolution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2061&quot;&gt;&lt;code&gt;#2061&lt;/code&gt;&lt;/a&gt; use existing TextMate scopes infrastructure for color theme customization.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2658&quot;&gt;&lt;code&gt;#2658&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t pass empty set of features to Cargo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2673&quot;&gt;&lt;code&gt;#2673&lt;/code&gt;&lt;/a&gt; correctly don&amp;#8217;t add parent item to the scope of a nested item.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2650&quot;&gt;&lt;code&gt;#2650&lt;/code&gt;&lt;/a&gt; correctly display types of macro call expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2679&quot;&gt;&lt;code&gt;#2679&lt;/code&gt;&lt;/a&gt; use lang-items infrastructure for resolving known traits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2684&quot;&gt;&lt;code&gt;#2684&lt;/code&gt;&lt;/a&gt; simplify build process for the TypeScript extension.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #4</title>
        <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2019/12/23/changelog-4.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2019/12/23/changelog-4.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/ce07a2daa9e53aa86a769f8641b14c2878444fbc&quot;&gt;&lt;code&gt;ce07a2d&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2577&quot;&gt;&lt;code&gt;#2577&lt;/code&gt;&lt;/a&gt; by default for VS Code, rely on client-side file watching.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2568&quot;&gt;&lt;code&gt;#2568&lt;/code&gt;&lt;/a&gt; add option to disable &lt;code&gt;--all-targets&lt;/code&gt; flag for &lt;code&gt;cargo watch&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2594&quot;&gt;&lt;code&gt;#2594&lt;/code&gt;&lt;/a&gt; type hints don&amp;#8217;t show default type arguments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2592&quot;&gt;&lt;code&gt;#2592&lt;/code&gt;&lt;/a&gt; initial type-inference for index expressions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2616&quot;&gt;&lt;code&gt;#2616&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2619&quot;&gt;&lt;code&gt;#2619&lt;/code&gt;&lt;/a&gt; improve type-inference for closures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2617&quot;&gt;&lt;code&gt;#2617&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t use approximate name resolution when computing hover.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2623&quot;&gt;&lt;code&gt;#2623&lt;/code&gt;&lt;/a&gt; expand macros in impls.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2628&quot;&gt;&lt;code&gt;#2628&lt;/code&gt;&lt;/a&gt; parse macros 2.0.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2641&quot;&gt;&lt;code&gt;#2641&lt;/code&gt;&lt;/a&gt; parse const generics.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2648&quot;&gt;&lt;code&gt;#2648&lt;/code&gt;&lt;/a&gt; rudimentary name resolution for local items.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2577&quot;&gt;&lt;code&gt;#2577&lt;/code&gt;&lt;/a&gt; better parser recovery for lambdas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2562&quot;&gt;&lt;code&gt;#2562&lt;/code&gt;&lt;/a&gt; correctly compute goto target range for a target inside a macro.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2575&quot;&gt;&lt;code&gt;#2575&lt;/code&gt;&lt;/a&gt; correctly highlight &lt;code&gt;cargo watch&lt;/code&gt; errors inside macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2595&quot;&gt;&lt;code&gt;#2595&lt;/code&gt;&lt;/a&gt; fix parsing of expressions expanded by macros.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2637&quot;&gt;&lt;code&gt;#2637&lt;/code&gt;&lt;/a&gt; optimize inlay hints.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2643&quot;&gt;&lt;code&gt;#2643&lt;/code&gt;&lt;/a&gt; optimize change tracking.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2581&quot;&gt;&lt;code&gt;#2581&lt;/code&gt;&lt;/a&gt; refactor &lt;code&gt;hir::Path&lt;/code&gt; to separate paths with and without generic arguments on the type level.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2583&quot;&gt;&lt;code&gt;#2583&lt;/code&gt;&lt;/a&gt; better prettier config for TypeScript extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2545&quot;&gt;&lt;code&gt;#2545&lt;/code&gt;&lt;/a&gt; add ids to all tokens (this is groundwork for hygiene and better support for IDE features inside macro calls).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2629&quot;&gt;&lt;code&gt;#2629&lt;/code&gt;&lt;/a&gt; remove imports from hir.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
      <item>
        <title>Changelog #3</title>
        <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://rust-analyzer.github.io//thisweek/2019/12/16/changelog-3.html</link>
        <guid isPermaLink="true">https://rust-analyzer.github.io//thisweek/2019/12/16/changelog-3.html</guid>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Commit: &lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/commit/0ef8ace012b19b76ee99b283801d0d17a3b72b4b&quot;&gt;&lt;code&gt;0ef8ace&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new-features&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#new-features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2511&quot;&gt;&lt;code&gt;#2511&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;ra_lsp_server --version&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2523&quot;&gt;&lt;code&gt;#2523&lt;/code&gt;&lt;/a&gt; implement extend selection for tuple patterns.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2550&quot;&gt;&lt;code&gt;#2550&lt;/code&gt;&lt;/a&gt; type inference for unary &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2548&quot;&gt;&lt;code&gt;#2548&lt;/code&gt;&lt;/a&gt; allow to select cargo features (by default, &lt;code&gt;--all-features&lt;/code&gt; is used).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2559&quot;&gt;&lt;code&gt;#2559&lt;/code&gt;&lt;/a&gt; use more fine-grained tags for syntax highlighting (&lt;code&gt;literal.byte&lt;/code&gt;, &lt;code&gt;literal.char&lt;/code&gt;, &amp;#8230;&amp;#8203;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;fixes&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#fixes&quot;&gt;&lt;/a&gt;Fixes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2565&quot;&gt;&lt;code&gt;#2565&lt;/code&gt;&lt;/a&gt; fix bug with syntax highlighting not updating on windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2519&quot;&gt;&lt;code&gt;#2519&lt;/code&gt;&lt;/a&gt; fix name resolution for types in traits.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2535&quot;&gt;&lt;code&gt;#2535&lt;/code&gt;&lt;/a&gt; don&amp;#8217;t trigger signature help on typing &lt;code&gt;)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2552&quot;&gt;&lt;code&gt;#2552&lt;/code&gt;&lt;/a&gt; fix goto definition target when the cursor is between tokens.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2567&quot;&gt;&lt;code&gt;#2567&lt;/code&gt;&lt;/a&gt; fix type inference for &lt;code&gt;impl Trait&lt;/code&gt; syntax.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;internal-improvements&quot;&gt;&lt;a class=&quot;anchor&quot; href=&quot;#internal-improvements&quot;&gt;&lt;/a&gt;Internal Improvements&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2510&quot;&gt;&lt;code&gt;#2510&lt;/code&gt;&lt;/a&gt; restore source maps for the typescript extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2525&quot;&gt;&lt;code&gt;#2525&lt;/code&gt;&lt;/a&gt; use ES2018 for VS Code extension.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2526&quot;&gt;&lt;code&gt;#2526&lt;/code&gt;&lt;/a&gt; upgrade to LSP 3.15.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2537&quot;&gt;&lt;code&gt;#2537&lt;/code&gt;&lt;/a&gt; lookup hir nodes by their parents, and not only by the source location.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rust-analyzer/rust-analyzer/pull/2561&quot;&gt;&lt;code&gt;#2561&lt;/code&gt;&lt;/a&gt; split  &lt;code&gt;Path&lt;/code&gt; into non-generic &lt;code&gt;ModPath&lt;/code&gt; and generic &lt;code&gt;Path&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      </item>
    
  </channel>
</rss>
